#!/bin/bash

export LD_LIBRARY_PATH=/opt/cuda/lib64/
set +e

PATH_TIDZAM=/opt/tidzam/

# Hack because python ...
CURRENT_PATH=`pwd`
cd $PATH_TIDZAM

LOGS=$PATH_TIDZAM/logs/
DATABASE=/opt/tidzam/out-tidzam/
BACKUP=$PATH_TIDZAM/database.tar.gz
BACKUP_REMOTE=slash6475@duhart-clement.fr:~/

PID_FILE=/tmp/tidzam-pid
RAM_LIMIT=10
PID=`cat $PID_FILE > /dev/null 2>&1`
DEBUG=1
JACK_NAME=tidzam

ACTION=$1

export CUDA_VISIBLE_DEVICES=1

test_memory (){
PID=$1
MEM=`ps -emo %mem,pid | grep $PID`
MEM=`echo $MEM | cut -d' ' -f1`

if [[ `echo $MEM'>'$RAM_LIMIT | bc -l` == 1 ]]; then
  return 1
fi
return 0
}

if [ "$ACTION" == "start" ]; then
  if [ -f $PID_FILE ]; then
    echo "TidZam is already running"
  else
    echo "Booting..."
    echo -n "        Jack server       "
    nohup /usr/bin/jackd  \
        --port-max 2048 \
        -v \
        -r \
        -t5000000000 \
        -ddummy \
        -r48000 \
        -p8192  \
        > $LOGS/tidzam-jack.log.txt 2>&1  &
    echo $! > "$PID_FILE-jack"
    echo "[ok]"
    sleep 1

    echo -n "        Database Manager  "
    nohup python3 -u -W ignore src/TidzamDatabaseManager.py \
        --database-folder=out-tidzam/  \
        > $LOGS/tidzam-database-manager.log.txt 2>&1 &
    echo $! > "$PID_FILE-database_manager"
    echo "[ok]"
    sleep 1

    echo -n "        Stream Loader     "
    nohup python3 -u -W ignore $PATH_TIDZAM/src/TidzamStreamManager.py \
        --debug=$DEBUG \
        --sources=tidzam.conf \
        > $LOGS/tidzam-stream-manager.log.txt 2>&1  &
    echo $! > "$PID_FILE-stream_loader"
    echo "[ok]"
    sleep 1

    echo -n "        Analyzer starting "
    nohup python3 -u -W ignore $PATH_TIDZAM/src/TidzamAnalyzer.py \
          --nn=classifiers/  \
          --overlap=0.25 \
          --debug=$DEBUG \
          --jack=tidzam-,impoundment,herring \
          --port=8001 \
          --out=$DATABASE \
          --chainAPI=slash:toto@chain-api.media.mit.edu/sites/18 \
          > $LOGS/tidzam-analyzer.log.txt 2>&1 &

    echo $! > $PID_FILE
    echo "[ok]"
    echo "TidZam [  READY  ]"
  fi

elif [ "$ACTION" == "stop" ]; then
  echo "Stopping..."
  echo -n "        Analyzer starting     "
  kill -9 `cat $PID_FILE`
  rm $PID_FILE
  echo "[ok]"
  echo -n "        Stream Loader         "
  kill -9 `cat $PID_FILE-stream_loader`
  rm "$PID_FILE-stream_loader"
  echo "[ok]"
  echo -n "        Jack server           "
  kill -9 `cat $PID_FILE-jack`
  rm "$PID_FILE-jack"
  echo "[ok]"
  echo -n "        Database Manager      "
  kill -9 `cat $PID_FILE-database_manager`
  rm "$PID_FILE-database_manager"
  echo "[ok]"
  echo -n "        Cleaning ffmpeg / mpv "
  pkill mpv
  pkill ffmpeg
  echo "[ok]"
  echo "TidZam [  STOP  ]"

elif [ "$ACTION" == "restart" ]; then
  $0 stop
  sleep 3
  $0 start

# Check RAM usage, if exceed the limit than restart (in case of memory leak)
elif [ "$ACTION" == "check" ]; then
  test_memory $PID
  if [[ $? == 1 ]]; then
    $0 restart
  fi

elif [ "$ACTION" == "backup" ]; then
  echo "TidZam backup $DATABASE -> $BACKUP"
  mv $BACKUP $BACKUP-0
  tar -zcvf $BACKUP $DATABASE
  echo  "Backup to remote $BACKUP_REMOTE"
  scp $BACKUP $BACKUP_REMOTE
  echo "Backup terminated"

else
  echo "tidzam (start | stop | check | restart)"
fi

#cd $CURRENT_PATH
