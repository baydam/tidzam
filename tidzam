#!/bin/bash

export LD_LIBRARY_PATH=/opt/cuda/lib64/
set +e

PID_FILE=/tmp/tidzam-pid
RAM_LIMIT=10
PID=`cat $PID_FILE`
DEBUG=1
JACK_NAME=tidzam

ACTION=$1

STREAMS=(
          "mpv -ao jack:name=impoundment:no-connect --audio-channels=30 --start=0 http://doppler.media.mit.edu:8000/impoundment.opus"
          "mpv -ao jack:name=herring:no-connect --start=0 http://doppler.media.mit.edu:8000/herring.ogg"
        )

export CUDA_VISIBLE_DEVICES=1

test_memory (){
PID=$1
MEM=`ps -emo %mem,pid | grep $PID`
MEM=`echo $MEM | cut -d' ' -f1`

if [[ `echo $MEM'>'$RAM_LIMIT | bc -l` == 1 ]]; then
  return 1
fi
return 0
}

if [ "$ACTION" == "start" ]; then
  if [ -f $PID_FILE ]; then
    echo "TidZam is already running"
  else
    echo "Jack server starting"
    nohup /usr/bin/jackd -r -p1024 -t500000 -ddummy -r44100 -p4096 1>&2 2>jack.log.txt &
    echo $! > "$PID_FILE-jack"

    echo "TidZam starting "
    # Autostart MPV process
    while true; do
      if [[ `ps -A -ostat,pid,cmd | grep "mpv -ao " | grep -v grep` = "" ]]; then
        for element in "${STREAMS[@]}"
          do
            echo "Starting MPV on $element"
            eval "nohup $element $STREAM 1>&2 2>/dev/null &"
          done
      fi
      sleep 5
    done  &
    echo $! > "$PID_FILE-mpv"

    # Start TidZam main process
    nohup python3 -u -W ignore src/tidzam.py \
          --nn=builds/prod/  \
          --overlap=0.25 \
          --debug=$DEBUG \
          --jack=impoundment,herring \
          --chainAPI=slash:toto@chain-api.media.mit.edu/sites/18 \
          --out=/opt/tidzam/out-tidzam/ \
          --extract=birds- \
          --extract-dd \
          --port=8001 \
          2>&1 > tidzam.log.txt &
    echo $! > $PID_FILE
    echo "[   DONE   ]"
  fi

elif [ "$ACTION" == "stop" ]; then
  echo "TidZam stopping "
  kill -9 `cat $PID_FILE`
  kill -9 `cat $PID_FILE-mpv`
  kill -9 `cat $PID_FILE-jack`
  pkill mpv
  pkill ffmpeg
  rm $PID_FILE
  rm "$PID_FILE-mpv"
  echo "[   DONE   ]"

elif [ "$ACTION" == "restart" ]; then
  $0 stop
  sleep 3
  $0 start

# Check RAM usage, if exceed the limit than restart (in case of memory leak)
elif [ "$ACTION" == "check" ]; then
  test_memory $PID
  if [[ $? == 1 ]]; then
    $0 restart
  fi

else
  echo "tidzam (start | stop | check | restart)"
fi
