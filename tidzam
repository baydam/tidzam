#!/bin/bash

export LD_LIBRARY_PATH=/opt/cuda/lib64/
set +e

PID_FILE=/tmp/tidzam-pid
RAM_LIMIT=10
PID=`cat $PID_FILE`
DEBUG=0
JACK_NAME=tidzam

ACTION=$1

export CUDA_VISIBLE_DEVICES=1

test_memory (){
PID=$1
MEM=`ps -emo %mem,pid | grep $PID`
MEM=`echo $MEM | cut -d' ' -f1`

if [[ `echo $MEM'>'$RAM_LIMIT | bc -l` == 1 ]]; then
  return 1
fi
return 0
}

if [ "$ACTION" == "start" ]; then
  if [ -f $PID_FILE ]; then
    echo "TidZam is already running"
  else
    echo "Jack server starting"
    nohup /usr/bin/jackd -r -t500000 -ddummy -r44100 -p8192 1>&2 2>jack.log.txt &
    echo $! > "$PID_FILE-jack"
    #nohup /usr/bin/jackd -r -d alsa -r 44100 &
    sleep 1

    echo "TidZam Stream Loader starting "
    nohup python3 src/SocketioJackConnector.py --debug=$DEBUG --sources=tidzam-source.json 1>&2 2>stream_loader.log.txt &
    echo $! > "$PID_FILE-stream_loader"
    sleep 1

    echo "TidZam Analyzer starting "
    nohup python3 -u -W ignore src/Tidzam.py \
          --nn=builds/prod/  \
          --overlap=0.25 \
          --debug=$DEBUG \
          --jack=tidzam-livestreams,impoundment,herring \
          --out=/opt/tidzam/out-tidzam/ \
          --port=8001 \
          --chainAPI=slash:toto@chain-api.media.mit.edu/sites/18 \
          --extract=birds- \
          --extract-dd \
          2>&1 > tidzam.log.txt &

    echo $! > $PID_FILE
    echo "[   DONE   ]"
  fi

elif [ "$ACTION" == "stop" ]; then
  echo "TidZam stopping "
  kill -9 `cat $PID_FILE`
  kill -9 `cat $PID_FILE-jack`
  kill -9 `cat $PID_FILE-stream_loader`
  pkill mpv
  pkill ffmpeg
  rm $PID_FILE
  rm "$PID_FILE-jack"
  echo "[   DONE   ]"

elif [ "$ACTION" == "restart" ]; then
  $0 stop
  sleep 3
  $0 start

# Check RAM usage, if exceed the limit than restart (in case of memory leak)
elif [ "$ACTION" == "check" ]; then
  test_memory $PID
  if [[ $? == 1 ]]; then
    $0 restart
  fi

else
  echo "tidzam (start | stop | check | restart)"
fi
